{"version":3,"sources":["view_transit/home.cljs"],"mappings":";AAOA,AAAKA,wBAAI,gDAAA,hDAACC;AAEV,8BAAA,9BAAMC;AAAN,AACE,IAAMC,SAAO,uDAAA,vDAACC;IACRC,oCAAS,AAAG,wBAAA,xBAACC,9BACJ,AAACC,uBAAaJ;AAF7B,AAGE,OAACK,sBAAOR,sBAAIK;;AAEhB,yBAAA,zBAAMI;AAAN,AAAA,0FAAA,iDAAA,mFAAA,kDAAA,uBAAA,mFAAA,8CAAA,cAAA,mFAAA,usBAAA,mFAAA,sDAAA,mFAAA,uDAAA,2CAAA,oDAAA,kBAAA,mBAAA,mFAAA,wDAAA,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,kDAAA,UAAA,qDAAA,0BAAA,mFAAA,sDAAA,2CAAA,qDAAA,SAAA,sDAAA,OAAA,r2DAIO,qIAAA,2CAAA,mDAAA,MAAA,oDAAA,KAAA,kDAAA,KAAA,uDAAA,2CAAA,gDAAA,MAAA,+CAAA,sBAAA,6EAAA,noBAACC,wBAAc,uDAAA,vDAACC,04DAU4B,WAAKC;AAAL,AAAQ,AAAiBA;;AAAG,OAACV;2BAC7E,kBAAA,AAAAW,wCAAA,AAAA,mFAAA,3GAAOb,8JAAU,iBAAAc,mBAAA,KAAAC;AAAA,AAAA,IAAAC,kDAAAC;IAAAC,6CAAAC;IAAAC,kDAAA;IAAAC,6CAAA,WAAAC;AAAA,AAAA,OAAAR,wBAAAQ;;AAAA,AAAA,CAAAL,sCAAAG;;AAAA,CAAAD,iCAAAE;;AAAA,IAAA,AAAc,iDAAA,AAAAR,jDAACU,iEAAWvB;UAA1B,AAAA,CAAAmB,iCAAAD;;AAAA,CAAAD,sCAAAD;;AAAA,mDAAAF;aAAjB;;AAGH,yBAAA,zBAAuBU;AAAvB,AACE,wDAAA,jDAACC,oIAAahB,+BAAM,wBAAA,xBAACH","names":["view-transit.home/edn","reagent.core.atom","view-transit.home/reset-edn","reader","cognitect.transit.reader","out","js/document.getElementById","cognitect.transit/read","cljs.core/reset!","view-transit.home/home","cognitect.transit/write","cognitect.transit.writer","e","cljs.core/deref","sb__5690__auto__","goog.string/StringBuffer","*print-newline*-orig-val__28223","cljs.core/*print-newline*","*print-fn*-orig-val__28224","cljs.core/*print-fn*","*print-newline*-temp-val__28225","*print-fn*-temp-val__28226","x__5691__auto__","cljs.pprint.pprint","view-transit.home/init","reagent.dom.render"],"sourcesContent":["(ns view-transit.home\n  (:require [cognitect.transit :as transit]\n            [clojure.pprint :as pp]\n            [reagent.core :as r]\n            [reagent.dom :as rdom]\n            [reagent.ratom :as ratom]))\n\n(def edn (r/atom nil))\n\n(defn reset-edn []\n  (let [reader (transit/reader :json)\n        out (->> (. (js/document.getElementById \"transit\") -value)\n                 (transit/read reader))]\n    (reset! edn out)))\n\n(defn home []\n  [:<>\n   [:h1 \"Read transit\"]\n   [:p \"E.g\"]\n   [:p (transit/write (transit/writer :json) {:foo \"bar\"\n                                                 :baz true\n                                                 :why true\n                                                 :fooey {:a false\n                                                         :b \"lorem ipsum\"}\n                                                 :universal-answer 42})]\n   [:form\n    [:label {:for \"transit\"} \"Transit:\"]\n    [:br]\n    [:input {:type \"text\" :id \"transit\" :name \"transit\"}]\n    [:input {:type \"submit\" :value \"Read\":on-click (fn [e] (.preventDefault e) (reset-edn))}]]\n   (when @edn [:pre (with-out-str (pp/pprint @edn))])])\n\n\n(defn ^:dev/after-load init []\n  (rdom/render [home] (js/document.getElementById \"root\")))\n"]}